(self.webpackChunkstudy_web_tailwindcss=self.webpackChunkstudy_web_tailwindcss||[]).push([[242],{493:(e,n,l)=>{"use strict";var i=l(200);window.onload=function(){new i.O("Display",!0).append([new i.o("Block").code('\x3c!-- Create a \'block\' element --\x3e\n<div class="space-y-4 text-center text-lg text-white font-semibold">\n  <span class="block bg-blue-400 py-2">1</span>\n  <span class="block bg-blue-400 py-2">2</span>\n  <span class="block bg-blue-400 py-2">3</span>\n</div>\n'),new i.o("Flow-Root").code('\x3c!-- Create a block element with \'block formatting context\' --\x3e\n<div class="space-y-4 text-lg text-white font-semibold">\n  <div class="flow-root text-center">\n    <div class="my-2 bg-red-400 py-2">1</div>\n  </div>\n  <div class="flow-root text-center">\n    <div class="my-2 bg-red-400 py-2">2</div>\n  </div>\n</div>\n'),new i.o("Inline Block").code('\x3c!-- Create a \'inline block\' element --\x3e\n<div class="space-x-4 text-lg text-white font-semibold">\n  <div class="inline-block px-4 py-2 bg-green-400">1</div>\n  <div class="inline-block px-4 py-2 bg-green-400">2</div>\n  <div class="inline-block px-4 py-2 bg-green-400">3</div>\n</div>\n'),new i.o("Inline").code('\x3c!-- Create a \'inline\' element --\x3e\n<div class="space-x-4 text-lg text-white font-semibold">\n  <div class="inline text-center px-4 py-2 bg-yellow-400">1</div>\n  <div class="inline text-center px-4 py-2 bg-yellow-400"">2</div>\n  <div class="inline text-center px-4 py-2 bg-yellow-400"">3</div>\n</div>\n'),new i.o("Flex").code('\x3c!-- Create a \'flex\' element --\x3e \n<div class="flex space-x-4 text-lg text-white font-semibold">\n  <div class="flex-1 py-4 text-center bg-purple-400">1</div>\n  <div class="flex-1 py-4 text-center bg-purple-400">2</div>\n  <div class="flex-1 py-4 text-center bg-purple-400">3</div>\n</div>\n'),new i.o("Inline Flex").code('\x3c!-- Create a \'inline flex\' element --\x3e \n<div class="inline-flex space-x-4 text-lg text-white font-semibold">\n  <div class="flex-1 px-6 py-4 text-center bg-purple-400">1</div>\n  <div class="flex-1 px-6 py-4 text-center bg-purple-400">2</div>\n  <div class="flex-1 px-6 py-4 text-center bg-purple-400">3</div>\n</div>\n'),new i.o("Grid").code('\x3c!-- Create a \'grid\' element, with cols count and block gap --\x3e \n<div class="grid gap-4 grid-cols-3 text-center text-lg text-white font-semibold">\n  <div class="bg-green-400 py-4">1</div>\n  <div class="bg-green-400 py-4">2</div>\n  <div class="bg-green-400 py-4">3</div>\n  <div class="bg-green-400 py-4">4</div>\n  <div class="bg-green-400 py-4">5</div>\n  <div class="bg-green-400 py-4">6</div>\n  <div class="bg-green-400 py-4">7</div>\n  <div class="bg-green-400 py-4">8</div>\n  <div class="bg-green-400 py-4">9</div>\n</div>\n'),new i.o("Inline Grid").code('\x3c!-- \n  Create a \'inline grid\' element, \n  the second span element will be placed on the nextline \n  if the container width is insufficientd\n--\x3e \n<span class="inline-grid grid-cols-4 gap-x-4 my-4 text-center text-lg text-white font-semibold">\n  <span class="bg-blue-400 py-4 px-8">1</span>\n  <span class="bg-blue-400 py-4 px-8">1</span>\n  <span class="bg-blue-400 py-4 px-8">1</span>\n  <span class="bg-blue-400 py-4 px-8">1</span>\n</span>\n<span class="inline-grid grid-cols-4 gap-x-4 text-center text-lg text-white font-semibold">\n  <span class="bg-blue-400 py-4 px-8">2</span>\n  <span class="bg-blue-400 py-4 px-8">2</span>\n  <span class="bg-blue-400 py-4 px-8">2</span>\n  <span class="bg-blue-400 py-4 px-8">2</span>\n</span>\n'),new i.o("Contents").code('\x3c!--\n  Use \'content\' to create a \'phantom\' container, \n  whose children are like direct children of the parent\n--\x3e\n<div class="flex text-center text-lg text-white font-semibold">\n  <div class="flex-1 bg-purple-400 mx-4 py-4">1</div>\n  <div class="contents">\n    <div class="flex-1 bg-purple-400 mx-4 py-4">2</div>\n    <div class="flex-1 bg-purple-400 mx-4 py-4">3</div>\n  </div>\n  <div class="flex-1 bg-purple-400 mx-4 py-4">4</div>\n</div>\n'),new i.o("Table").code("\x3c!--\n  Use 'table', 'table-row', 'table-cell', 'table-caption', \n  'table-column', 'table-column-group', 'table-header-group', \n  'table-row-group' and 'table-footer-group' to create elements\n  like 'table'\n--\x3e\n<div class=\"table w-full text-lg text-white font-semibold\">\n  <div class=\"table-row-group\">\n    <div class=\"table-row\">\n      <div class=\"table-cell bg-yellow-400 py-4 px-2\">A cell with more content</div>\n      <div class=\"table-cell bg-yellow-600 py-4 px-2\">Cell 2</div>\n      <div class=\"table-cell bg-yellow-400 py-4 px-2\">Cell 3</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell bg-yellow-600 py-4 px-2\">Cell 4</div>\n      <div class=\"table-cell bg-yellow-400 py-4 px-2\">A cell with more content</div>\n      <div class=\"table-cell bg-yellow-600 py-4 px-2\">Cell 6</div>\n    </div>\n  </div>\n</div>\n"),new i.o("Hidden").code('\x3c!-- \n  Use \'hidden\' to set element with \'display:none\' style, \n  and remove it from document\n--\x3e\n<div class="flex text-center text-lg text-white font-semibold">\n  <div class="hidden flex-1 bg-red-400 mx-2 py-4">1</div>\n  <div class="flex-1 bg-red-400 mx-2 py-4">2</div>\n  <div class="flex-1 bg-red-400 mx-2 py-4">3</div>\n</div>\n'),new i.o("Responsive").code('<div class="md:space-x-4 space-y-4 text-lg text-white font-semibold">\n  <div class="bg-blue-400 py-4 px-6 md:inline-block block">1</div>\n  <div class="bg-blue-400 py-4 px-6 md:inline-block block">2</div>\n  <div class="bg-blue-400 py-4 px-6 md:inline-block block">3</div>\n</div>\n'),new i.o("Variants","javascript").code("// tailwind.config.js\nmodule.exports = {\n  variants: {\n    extend: {\n      // ...\n      display: ['hover', 'focus']\n    }\n  }\n}\n"),new i.o("Disabling","javascript").code("// tailwind.config.js\nmodule.exports = {\n  corePlugins: {\n    // ...\n    display: false,\n  }\n}\n")]).render()}}},e=>{"use strict";e.O(0,[592],(()=>(493,e(e.s=493)))),e.O()}]);